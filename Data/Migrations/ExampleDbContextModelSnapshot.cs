// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(CrimeDataDbContext))]
    partial class ExampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Autherity", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authorities");
                });

            modelBuilder.Entity("Data.Entities.CrimeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrimeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("CrimeTypeId")
                        .HasColumnType("smallint");

                    b.Property<short?>("FallswithinId")
                        .HasColumnType("smallint");

                    b.Property<string>("LSOAcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSOAname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("MonthId")
                        .HasColumnType("smallint");

                    b.Property<short?>("ReportedById")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CrimeTypeId");

                    b.HasIndex("FallswithinId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MonthId");

                    b.HasIndex("ReportedById");

                    b.ToTable("ImportCrimeData");
                });

            modelBuilder.Entity("Data.Entities.CrimeType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CrimeType");
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Data.Entities.Month", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Month");
                });

            modelBuilder.Entity("Data.Entities.CrimeData", b =>
                {
                    b.HasOne("Data.Entities.CrimeType", "CrimeType")
                        .WithMany("CrimeDatas")
                        .HasForeignKey("CrimeTypeId");

                    b.HasOne("Data.Entities.Autherity", "Fallswithin")
                        .WithMany("CrimeDatasFallsWithIn")
                        .HasForeignKey("FallswithinId");

                    b.HasOne("Data.Entities.Location", "Location")
                        .WithMany("CrimeDatas")
                        .HasForeignKey("LocationId");

                    b.HasOne("Data.Entities.Month", "Month")
                        .WithMany("CrimeDatas")
                        .HasForeignKey("MonthId");

                    b.HasOne("Data.Entities.Autherity", "ReportedBy")
                        .WithMany("CrimeDatasReportedBy")
                        .HasForeignKey("ReportedById");

                    b.Navigation("CrimeType");

                    b.Navigation("Fallswithin");

                    b.Navigation("Location");

                    b.Navigation("Month");

                    b.Navigation("ReportedBy");
                });

            modelBuilder.Entity("Data.Entities.Autherity", b =>
                {
                    b.Navigation("CrimeDatasFallsWithIn");

                    b.Navigation("CrimeDatasReportedBy");
                });

            modelBuilder.Entity("Data.Entities.CrimeType", b =>
                {
                    b.Navigation("CrimeDatas");
                });

            modelBuilder.Entity("Data.Entities.Location", b =>
                {
                    b.Navigation("CrimeDatas");
                });

            modelBuilder.Entity("Data.Entities.Month", b =>
                {
                    b.Navigation("CrimeDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
